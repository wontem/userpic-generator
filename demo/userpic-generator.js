// Generated by CoffeeScript 1.7.1
var createUserpic, easeFunctions, fillRandom, paral;

easeFunctions = {
  linear: function(t, b, c, d) {
    return c * t / d + b;
  },
  easeOutQuart: function(t, b, c, d) {
    t /= d;
    t--;
    return -c * (t * t * t * t - 1) + b;
  },
  easeInQuart: function(t, b, c, d) {
    t /= d;
    return c * t * t * t * t + b;
  }
};

paral = function(ctx, x, y, w, h, color) {
  x -= w / 4;
  y -= h / 4;
  ctx.lineWidth = 1;
  ctx.fillStyle = ctx.strokeStyle = color;
  ctx.beginPath();
  ctx.moveTo(x + w, y);
  ctx.lineTo(x + w * 3 / 2, y + h / 2);
  ctx.lineTo(x + w / 2, y + h * 3 / 2);
  ctx.lineTo(x, y + h);
  ctx.closePath();
  ctx.fill();
  return ctx.stroke();
};

fillRandom = function(ctx, seed, colors_number, cols, rows, hue_step, easing) {
  var cell_h, cell_w, color, color_num, deg, gen_color, i, steps, table, uniqGen, x, y, _i, _j, _results;
  cell_w = ctx.canvas.width / cols;
  cell_h = ctx.canvas.height / rows;
  cols += 2;
  rows += 2;
  uniqGen = new Chance(seed);
  steps = Math.ceil(rows * cols / 2);
  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  table = (function() {
    var _i, _results;
    _results = [];
    for (i = _i = 0; 0 <= cols ? _i < cols : _i > cols; i = 0 <= cols ? ++_i : --_i) {
      _results.push([]);
    }
    return _results;
  })();
  deg = uniqGen.natural({
    min: 0,
    max: 359
  });
  for (i = _i = 0; 0 <= steps ? _i < steps : _i > steps; i = 0 <= steps ? ++_i : --_i) {
    x = i % cols;
    y = Math.floor(i / cols);
    color_num = colors_number === 1 ? 1 : uniqGen.natural({
      min: 0,
      max: colors_number - 1
    });
    gen_color = {
      h: hue_step * color_num + deg,
      s: easeFunctions[easing](color_num, 20, 60, colors_number - 1),
      l: easeFunctions[easing](color_num, 20, 65, colors_number - 1)
    };
    table[x][y] = table[cols - x - 1][rows - y - 1] = "hsl(" + gen_color.h + ", " + gen_color.s + "%, " + gen_color.l + "%)";
  }
  _results = [];
  for (x = _j = 0; 0 <= cols ? _j < cols : _j > cols; x = 0 <= cols ? ++_j : --_j) {
    _results.push((function() {
      var _k, _results1;
      _results1 = [];
      for (y = _k = 0; 0 <= rows ? _k < rows : _k > rows; y = 0 <= rows ? ++_k : --_k) {
        color = table[x][y];
        _results1.push(paral(ctx, (x - 1) * cell_w, (y - 1) * cell_h, cell_w, cell_h, color));
      }
      return _results1;
    })());
  }
  return _results;
};

createUserpic = function(canvas, seed, colors_number, w, h, cols, rows, hue_step, easing) {
  var ctx;
  if (colors_number == null) {
    colors_number = 3;
  }
  if (w == null) {
    w = 100;
  }
  if (h == null) {
    h = w;
  }
  if (cols == null) {
    cols = 10;
  }
  if (rows == null) {
    rows = cols / 2 | 0;
  }
  if (hue_step == null) {
    hue_step = 120;
  }
  if (easing == null) {
    easing = 'linear';
  }
  canvas.width = w;
  canvas.height = h;
  ctx = canvas.getContext('2d');
  return fillRandom(ctx, seed, colors_number, cols, rows, hue_step, easing);
};

//# sourceMappingURL=userpic-generator.map
